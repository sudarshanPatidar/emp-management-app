{"ast":null,"code":"// import { useEffect, useState, useCallback } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import { retrieveEmployeeByEmployeeIdApi, updateEmployeeApi, createEmployeeApi } from './api/EmployeeApiService';\n// import { Formik, Form, Field } from 'formik';\n\n// function formatDate(dateString) {\n//     const date = new Date(dateString);\n//     const year = date.getFullYear();\n//     const month = String(date.getMonth() + 1).padStart(2, '0');\n//     const day = String(date.getDate()).padStart(2, '0');\n//     return `${year}-${month}-${day}`;\n// }\n\n// export default function EmployeeComponent() {\n//     const { employeeId } = useParams();\n//     const [employee, setEmployee] = useState({\n//         name: '',\n//         designationCode: '',\n//         dateOfBirth: '',\n//         isIndian: false,\n//         gender: '',\n//         basicSalary: '',\n//         pannumber: '',\n//         aadharCardNumber: ''\n//     });\n//     const [error, setError] = useState('');\n//     const navigate = useNavigate();\n\n//     const retrieveEmployee = useCallback(() => {\n//         if (employeeId !== 'A00000000') {\n//             retrieveEmployeeByEmployeeIdApi(employeeId)\n//                 .then(response => {\n//                     const data = response.data;\n//                     data.dateOfBirth = formatDate(data.dateOfBirth);\n//                     setEmployee(data);\n//                 })\n//                 .catch(error => console.error(error));\n//         }\n//     }, [employeeId]);\n\n//     useEffect(() => {\n//         retrieveEmployee();\n//     }, [retrieveEmployee]);\n\n//     function onSubmit(values) {\n\n//         console.log(values)\n\n//         const employeeData = {\n//             employeeId: employeeId,\n//             ...values,\n//             isIndian: values.isIndian === 'true',\n//             gender: values.gender\n//         };\n\n//         if (employeeId === 'A00000000') {\n//             createEmployeeApi(employeeData)\n//                 .then(response => {\n//                     navigate('/employees');\n//                 })\n//                 .catch(error => {\n//                     if (error.response && error.response.status === 409) {\n//                         setError(`Conflict Error: ${error.response.data}`);\n//                     } else {\n//                         setError('Error creating employee');\n//                     }\n//                 });\n//         } else {\n//             updateEmployeeApi(employeeData)\n//                 .then(response => {\n//                     if (response.status !== 201) {\n//                         if (response.status === 409) {\n//                             setError(`Conflict Error: ${response.data}`);\n//                         } else {\n//                             setError(`Error: ${response.data}`);\n//                         }\n//                     } else {\n//                         navigate('/employees');\n//                     }\n//                 })\n//                 .catch(error => {\n//                     if (error.response && error.response.status === 409) {\n//                         setError(`Conflict Error: ${error.response.data}`);\n//                     } else {\n//                         setError('Error updating employee');\n//                     }\n//                 });\n//         }\n//     }\n\n//     return (\n//         <div className=\"container\">\n//             <h1>Enter Employee Details</h1>\n//             <div>\n//                 {error && <div className=\"alert alert-warning m-3\">{error}</div>}\n//                 <Formik initialValues={employee} enableReinitialize={true} onSubmit={onSubmit}>\n//                     {(props) => (\n//                         <Form>\n//                             <fieldset className=\"form-group\">\n//                                 <label>Name</label>\n//                                 <Field type=\"text\" className=\"form-control\" name=\"name\" />\n//                             </fieldset>\n//                             <fieldset className=\"form-group\">\n//                                 <label>Designation Code</label>\n//                                 <Field type=\"text\" className=\"form-control\" name=\"designationCode\" />\n//                             </fieldset>\n//                             <fieldset className=\"form-group\">\n//                                 <label>Date of Birth</label>\n//                                 <Field type=\"date\" className=\"form-control\" name=\"dateOfBirth\" />\n//                             </fieldset>\n//                             <fieldset className=\"form-group\">\n//                                 <label>Is Indian</label>\n//                                 <Field as=\"select\" className=\"form-control\" name=\"isIndian\">\n//                                     <option value=\"\">Select</option>\n//                                     <option value=\"true\">Yes</option>\n//                                     <option value=\"false\">No</option>\n//                                 </Field>\n//                             </fieldset>\n//                             <fieldset className=\"form-group\">\n//                                 <label>Gender</label>\n//                                 <Field as=\"select\" className=\"form-control\" name=\"gender\">\n//                                     <option value=\"\">Select</option>\n//                                     <option value=\"MALE\">Male</option>\n//                                     <option value=\"FEMALE\">Female</option>\n//                                 </Field>\n//                             </fieldset>\n//                             <fieldset className=\"form-group\">\n//                                 <label>Basic Salary</label>\n//                                 <Field type=\"number\" className=\"form-control\" name=\"basicSalary\" />\n//                             </fieldset>\n//                             <fieldset className=\"form-group\">\n//                                 <label>PAN Number</label>\n//                                 <Field type=\"text\" className=\"form-control\" name=\"pannumber\" />\n//                             </fieldset>\n//                             <fieldset className=\"form-group\">\n//                                 <label>Aadhar Card Number</label>\n//                                 <Field type=\"text\" className=\"form-control\" name=\"aadharCardNumber\" />\n//                             </fieldset>\n//                             <div>\n//                                 <button className=\"btn btn-success m-5\" type=\"submit\">Save</button>\n//                             </div>\n//                         </Form>\n//                     )}\n//                 </Formik>\n//             </div>\n//         </div>\n//     );\n// }","map":{"version":3,"names":[],"sources":["D:/JavaProjects/employee-management-app/src/components/designations/EmployeeComponent.jsx"],"sourcesContent":["// import { useEffect, useState, useCallback } from 'react';\r\n// import { useParams, useNavigate } from 'react-router-dom';\r\n// import { retrieveEmployeeByEmployeeIdApi, updateEmployeeApi, createEmployeeApi } from './api/EmployeeApiService';\r\n// import { Formik, Form, Field } from 'formik';\r\n\r\n// function formatDate(dateString) {\r\n//     const date = new Date(dateString);\r\n//     const year = date.getFullYear();\r\n//     const month = String(date.getMonth() + 1).padStart(2, '0');\r\n//     const day = String(date.getDate()).padStart(2, '0');\r\n//     return `${year}-${month}-${day}`;\r\n// }\r\n\r\n\r\n// export default function EmployeeComponent() {\r\n//     const { employeeId } = useParams();\r\n//     const [employee, setEmployee] = useState({\r\n//         name: '',\r\n//         designationCode: '',\r\n//         dateOfBirth: '',\r\n//         isIndian: false,\r\n//         gender: '',\r\n//         basicSalary: '',\r\n//         pannumber: '',\r\n//         aadharCardNumber: ''\r\n//     });\r\n//     const [error, setError] = useState('');\r\n//     const navigate = useNavigate();\r\n\r\n//     const retrieveEmployee = useCallback(() => {\r\n//         if (employeeId !== 'A00000000') {\r\n//             retrieveEmployeeByEmployeeIdApi(employeeId)\r\n//                 .then(response => {\r\n//                     const data = response.data;\r\n//                     data.dateOfBirth = formatDate(data.dateOfBirth);\r\n//                     setEmployee(data);\r\n//                 })\r\n//                 .catch(error => console.error(error));\r\n//         }\r\n//     }, [employeeId]);\r\n\r\n//     useEffect(() => {\r\n//         retrieveEmployee();\r\n//     }, [retrieveEmployee]);\r\n\r\n//     function onSubmit(values) {\r\n\r\n//         console.log(values)\r\n        \r\n//         const employeeData = {\r\n//             employeeId: employeeId,\r\n//             ...values,\r\n//             isIndian: values.isIndian === 'true',\r\n//             gender: values.gender\r\n//         };\r\n\r\n//         if (employeeId === 'A00000000') {\r\n//             createEmployeeApi(employeeData)\r\n//                 .then(response => {\r\n//                     navigate('/employees');\r\n//                 })\r\n//                 .catch(error => {\r\n//                     if (error.response && error.response.status === 409) {\r\n//                         setError(`Conflict Error: ${error.response.data}`);\r\n//                     } else {\r\n//                         setError('Error creating employee');\r\n//                     }\r\n//                 });\r\n//         } else {\r\n//             updateEmployeeApi(employeeData)\r\n//                 .then(response => {\r\n//                     if (response.status !== 201) {\r\n//                         if (response.status === 409) {\r\n//                             setError(`Conflict Error: ${response.data}`);\r\n//                         } else {\r\n//                             setError(`Error: ${response.data}`);\r\n//                         }\r\n//                     } else {\r\n//                         navigate('/employees');\r\n//                     }\r\n//                 })\r\n//                 .catch(error => {\r\n//                     if (error.response && error.response.status === 409) {\r\n//                         setError(`Conflict Error: ${error.response.data}`);\r\n//                     } else {\r\n//                         setError('Error updating employee');\r\n//                     }\r\n//                 });\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <div className=\"container\">\r\n//             <h1>Enter Employee Details</h1>\r\n//             <div>\r\n//                 {error && <div className=\"alert alert-warning m-3\">{error}</div>}\r\n//                 <Formik initialValues={employee} enableReinitialize={true} onSubmit={onSubmit}>\r\n//                     {(props) => (\r\n//                         <Form>\r\n//                             <fieldset className=\"form-group\">\r\n//                                 <label>Name</label>\r\n//                                 <Field type=\"text\" className=\"form-control\" name=\"name\" />\r\n//                             </fieldset>\r\n//                             <fieldset className=\"form-group\">\r\n//                                 <label>Designation Code</label>\r\n//                                 <Field type=\"text\" className=\"form-control\" name=\"designationCode\" />\r\n//                             </fieldset>\r\n//                             <fieldset className=\"form-group\">\r\n//                                 <label>Date of Birth</label>\r\n//                                 <Field type=\"date\" className=\"form-control\" name=\"dateOfBirth\" />\r\n//                             </fieldset>\r\n//                             <fieldset className=\"form-group\">\r\n//                                 <label>Is Indian</label>\r\n//                                 <Field as=\"select\" className=\"form-control\" name=\"isIndian\">\r\n//                                     <option value=\"\">Select</option>\r\n//                                     <option value=\"true\">Yes</option>\r\n//                                     <option value=\"false\">No</option>\r\n//                                 </Field>\r\n//                             </fieldset>\r\n//                             <fieldset className=\"form-group\">\r\n//                                 <label>Gender</label>\r\n//                                 <Field as=\"select\" className=\"form-control\" name=\"gender\">\r\n//                                     <option value=\"\">Select</option>\r\n//                                     <option value=\"MALE\">Male</option>\r\n//                                     <option value=\"FEMALE\">Female</option>\r\n//                                 </Field>\r\n//                             </fieldset>\r\n//                             <fieldset className=\"form-group\">\r\n//                                 <label>Basic Salary</label>\r\n//                                 <Field type=\"number\" className=\"form-control\" name=\"basicSalary\" />\r\n//                             </fieldset>\r\n//                             <fieldset className=\"form-group\">\r\n//                                 <label>PAN Number</label>\r\n//                                 <Field type=\"text\" className=\"form-control\" name=\"pannumber\" />\r\n//                             </fieldset>\r\n//                             <fieldset className=\"form-group\">\r\n//                                 <label>Aadhar Card Number</label>\r\n//                                 <Field type=\"text\" className=\"form-control\" name=\"aadharCardNumber\" />\r\n//                             </fieldset>\r\n//                             <div>\r\n//                                 <button className=\"btn btn-success m-5\" type=\"submit\">Save</button>\r\n//                             </div>\r\n//                         </Form>\r\n//                     )}\r\n//                 </Formik>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}