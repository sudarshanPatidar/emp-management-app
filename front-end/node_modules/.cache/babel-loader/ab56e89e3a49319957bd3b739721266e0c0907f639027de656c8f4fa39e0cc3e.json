{"ast":null,"code":"// import { useEffect, useState } from 'react'\n// import {useParams, useNavigate} from 'react-router-dom'\n// import { retrieveDesignationByCodeApi, updateDesignationApi, createDesignationApi } from './api/DesignationApiService'\n// import {Formik, Form, Field} from 'formik'\n\n// export default function DesignationComponet() {\n\n//     const {code} = useParams()\n\n//     const[title, setTitle] = useState('')\n\n//     const [error, setError] = useState('');\n\n//     const navigate = useNavigate()\n\n//     // const username = authContext.username\n\n//     useEffect(\n//         () => retrieveDesignations(), [code]\n//         )\n\n//     function retrieveDesignations(){\n//         if(code != -1) {\n//             retrieveDesignationByCodeApi(code)\n//             .then(response => {\n//                 setTitle(response.data.title)\n//                 console.log(title)\n//             })\n//             .catch(error => console.log(error))\n//         }\n//     }\n\n//     function onSubmit(values) {\n//         const designation = {\n//             code: code,\n//             title: values.title,\n//         }\n\n//         if(code==-1) {\n//             const designation = {\n//                 code: 0,\n//                 title: values.title,\n//             }\n//             createDesignationApi(designation)\n//             .then(response => {\n//                 navigate('/designations');\n//             })\n//             .catch(error => {\n//                 // console.log(error);\n//                 if (error.response && error.response.status === 409) {\n//                     setError(`Conflict Error: ${error.response.data}`);\n//                 } else {\n//                     setError('Error creating designation');\n//                 }\n//             });\n\n//         } else {\n//             const designation = {\n//                 code: code,\n//                 title: values.title,\n//             }\n\n//             // console.log(designation)\n\n//             updateDesignationApi(designation)\n//             .then(response => {\n//                 if (response.status !== 201) {\n//                     if (response.status === 409) {\n//                         setError(`Conflict Error: ${response.data}`);\n//                     } else {\n//                         setError(`Error: ${response.data}`);\n//                     }\n//                 } else {\n//                     navigate('/designations');\n//                 }\n//             })\n//             .catch(error => {\n//                 console.log(error);\n//                 if (error.response && error.response.status === 409) {\n//                     setError(`Conflict Error: ${error.response.data}`);\n//                 } else {\n//                     setError('Error updating designation');\n//                 }\n//             });\n\n//         }\n//     }\n\n//     // function validate(values) {\n//     //     let errors = {\n//     //         // description: 'Enter a valid description',\n//     //         // targetDate: 'Enter a valid target date'\n//     //     }\n\n//     //     if(values.description.length<5) {\n//     //         errors.description = 'Enter atleast 5 characters'\n//     //     }\n\n//     //     if(values.targetDate == null || values.targetDate=='' || !moment(values.targetDate).isValid()) {\n//     //         errors.targetDate = 'Enter a target date'\n//     //     }\n\n//     //     console.log(values)\n//     //     return errors\n//     // }\n\n//     return (\n//         <div className=\"container\">\n//             <h1>Enter Designation Details </h1>\n//             <div>\n//             {error && <div className=\"alert alert-warning m-3\">{error}</div>}\n//                 <Formik initialValues={ { title } } \n//                     enableReinitialize = {true}\n//                     onSubmit = {onSubmit}\n//                     // validate = {validate}\n//                     // validateOnChange = {false}\n//                     // validateOnBlur = {false}\n//                 >\n//                 {\n//                     (props) => (\n//                         <Form>\n\n//                             <fieldset className=\"form-group\">\n//                                 <label>Title</label>\n//                                 <Field type=\"text\" className=\"form-control\" name=\"title\" />\n//                             </fieldset>\n//                             <div>\n//                                 <button className=\"btn btn-success m-5\" type=\"submit\">Save</button>\n//                             </div>\n//                         </Form>\n//                     )\n//                 }\n//                 </Formik>\n//             </div>\n\n//         </div>\n//     )\n// }","map":{"version":3,"names":[],"sources":["D:/JavaProjects/employee-management-app/src/components/designations/DesignationComponent.jsx"],"sourcesContent":["// import { useEffect, useState } from 'react'\r\n// import {useParams, useNavigate} from 'react-router-dom'\r\n// import { retrieveDesignationByCodeApi, updateDesignationApi, createDesignationApi } from './api/DesignationApiService'\r\n// import {Formik, Form, Field} from 'formik'\r\n\r\n// export default function DesignationComponet() {\r\n    \r\n//     const {code} = useParams()\r\n    \r\n//     const[title, setTitle] = useState('')\r\n\r\n//     const [error, setError] = useState('');\r\n\r\n//     const navigate = useNavigate()\r\n    \r\n//     // const username = authContext.username\r\n    \r\n//     useEffect(\r\n//         () => retrieveDesignations(), [code]\r\n//         )\r\n\r\n//     function retrieveDesignations(){\r\n//         if(code != -1) {\r\n//             retrieveDesignationByCodeApi(code)\r\n//             .then(response => {\r\n//                 setTitle(response.data.title)\r\n//                 console.log(title)\r\n//             })\r\n//             .catch(error => console.log(error))\r\n//         }\r\n//     }\r\n\r\n//     function onSubmit(values) {\r\n//         const designation = {\r\n//             code: code,\r\n//             title: values.title,\r\n//         }\r\n\r\n\r\n//         if(code==-1) {\r\n//             const designation = {\r\n//                 code: 0,\r\n//                 title: values.title,\r\n//             }\r\n//             createDesignationApi(designation)\r\n//             .then(response => {\r\n//                 navigate('/designations');\r\n//             })\r\n//             .catch(error => {\r\n//                 // console.log(error);\r\n//                 if (error.response && error.response.status === 409) {\r\n//                     setError(`Conflict Error: ${error.response.data}`);\r\n//                 } else {\r\n//                     setError('Error creating designation');\r\n//                 }\r\n//             });\r\n    \r\n//         } else {\r\n//             const designation = {\r\n//                 code: code,\r\n//                 title: values.title,\r\n//             }\r\n\r\n//             // console.log(designation)\r\n\r\n\r\n//             updateDesignationApi(designation)\r\n//             .then(response => {\r\n//                 if (response.status !== 201) {\r\n//                     if (response.status === 409) {\r\n//                         setError(`Conflict Error: ${response.data}`);\r\n//                     } else {\r\n//                         setError(`Error: ${response.data}`);\r\n//                     }\r\n//                 } else {\r\n//                     navigate('/designations');\r\n//                 }\r\n//             })\r\n//             .catch(error => {\r\n//                 console.log(error);\r\n//                 if (error.response && error.response.status === 409) {\r\n//                     setError(`Conflict Error: ${error.response.data}`);\r\n//                 } else {\r\n//                     setError('Error updating designation');\r\n//                 }\r\n//             });\r\n\r\n            \r\n//         }\r\n//     }\r\n\r\n//     // function validate(values) {\r\n//     //     let errors = {\r\n//     //         // description: 'Enter a valid description',\r\n//     //         // targetDate: 'Enter a valid target date'\r\n//     //     }\r\n\r\n//     //     if(values.description.length<5) {\r\n//     //         errors.description = 'Enter atleast 5 characters'\r\n//     //     }\r\n\r\n//     //     if(values.targetDate == null || values.targetDate=='' || !moment(values.targetDate).isValid()) {\r\n//     //         errors.targetDate = 'Enter a target date'\r\n//     //     }\r\n\r\n//     //     console.log(values)\r\n//     //     return errors\r\n//     // }\r\n\r\n//     return (\r\n//         <div className=\"container\">\r\n//             <h1>Enter Designation Details </h1>\r\n//             <div>\r\n//             {error && <div className=\"alert alert-warning m-3\">{error}</div>}\r\n//                 <Formik initialValues={ { title } } \r\n//                     enableReinitialize = {true}\r\n//                     onSubmit = {onSubmit}\r\n//                     // validate = {validate}\r\n//                     // validateOnChange = {false}\r\n//                     // validateOnBlur = {false}\r\n//                 >\r\n//                 {\r\n//                     (props) => (\r\n//                         <Form>\r\n\r\n\r\n//                             <fieldset className=\"form-group\">\r\n//                                 <label>Title</label>\r\n//                                 <Field type=\"text\" className=\"form-control\" name=\"title\" />\r\n//                             </fieldset>\r\n//                             <div>\r\n//                                 <button className=\"btn btn-success m-5\" type=\"submit\">Save</button>\r\n//                             </div>\r\n//                         </Form>\r\n//                     )\r\n//                 }\r\n//                 </Formik>\r\n//             </div>\r\n\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}